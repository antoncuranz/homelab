mosquitto:
  global:
    nameOverride: mosquitto
  controllers:
    main:
      containers:
        main:
          image:
            repository: docker.io/library/eclipse-mosquitto
            tag: 2.0.18
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities: { drop: [ "ALL" ] }
          resources:
            requests:
              cpu: 10m
            limits:
              memory: 16Mi
      pod:
        securityContext:
          runAsUser: 568
          runAsGroup: 568
          runAsNonRoot: true
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
  service:
    main:
      type: LoadBalancer
      annotations:
        metallb.universe.tf/allow-shared-ip: default
      ports:
        http:
          enabled: false
        mqtt:
          enabled: true
          port: 1883
  persistence:
    mosquitto-conf:
      type: configMap
      name: mosquitto-config
      globalMounts:
        - path: /mosquitto/config/mosquitto.conf
          subPath: mosquitto.conf
    secret:
      type: secret
      name: mqtt-secret
      globalMounts:
        - path: /mosquitto/mosquitto_pwd
          subPath: mosquitto_pwd
    tibber:
      enabled: true
      type: secret
      name: tibber-secret
      globalMounts:
        - path: /mosquitto/tibber_certs
    data:
      enabled: true
      accessMode: ReadWriteOnce
      size: 250Mi
      globalMounts:
        - path: /mosquitto/data
      dataSourceRef:
        kind: ReplicationDestination
        apiGroup: volsync.backube
        name: mosquitto-dst

node-red:
  global:
    nameOverride: node-red
  controllers:
    main:
      pod:
        securityContext:
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: "OnRootMismatch"

      containers:
        main:
          image:
            repository: docker.io/nodered/node-red
            tag: 4.0.2
          resources:
            requests:
              cpu: 5m
              memory: 512Mi
            limits:
              memory: 512Mi
  service:
    main:
      ports:
        http:
          port: 1880
  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        external-dns.alpha.kubernetes.io/target: "ipv4.serverton.de"
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/auth-signin: https://oauth2.serverton.de/oauth2/start
        nginx.ingress.kubernetes.io/auth-url: https://oauth2.serverton.de/oauth2/auth
      hosts:
        - host: &host "mqtt.serverton.de"
          paths:
            - path: /
              service:
                name: main
                port: http
      tls:
        - secretName: mqtt-tls-certificate
          hosts:
            - *host
  persistence:
    data:
      enabled: true
      accessMode: ReadWriteOnce
      size: 250Mi
      globalMounts:
        - path: /data
      dataSourceRef:
        kind: ReplicationDestination
        apiGroup: volsync.backube
        name: node-red-dst
